<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
    <property>
        <name>hbase.cluster.distributed</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.master.port</name>
        <value>{{ hbase.master_port }}</value>
    </property>
    <property>
        <name>hbase.master.ipc.address</name>
        <value>0.0.0.0</value>
    </property>
    <property>
        <name>hbase.master.info.port</name>
        <value>{{ hbase.master_info_port }}</value>
    </property>
    <property>
        <name>hbase.regionserver.port</name>
        <value>{{ hbase.region_port }}</value>
    </property>
    <property>
        <name>hbase.regionserver.info.port</name>
        <value>{{ hbase.region_info_port }}</value>
    </property>
    <property>
        <name>hbase.rootdir</name>
        <value>hdfs://{{ hadoop.hdfs.nameservice }}/apps/hbase</value>
    </property>
    <property>
        <name>zookeeper.znode.parent</name>
        <value>{{ hbase.znode_parent }}</value>
    </property>
    <property>
        <name>zookeeper.znode.rootserver</name>
        <value>{{ hbase.znode_rootserver }}</value>
    </property>
    <property>
        <name>zookeeper.session.timeout</name>
        <value>{{ hbase.session_timeout }}</value>
    </property>
    <property>
        <name>hbase.rpc.timeout</name>
        <value>{{ hbase.rpc_timeout }}</value>
    </property>
    <property>
        <name>hbase.wal.provider</name>
        <value>filesystem</value>
    </property>
    <property>
        <name>hbase.zookeeper.property.clientPort</name>
        <value>{{ zookeeper.client_port }}</value>
    </property>
    <property>
        <name>hbase.zookeeper.quorum</name>
        <value>{% for zoo in groups['zookeeper'] %}{% if zoo != groups['zookeeper'][0] %},{% endif %}{{ zoo }}{% endfor %}</value>
    </property>
    <property>
        <name>hbase.zookeeper.property.dataDir</name>
        <value>{{ bigdata_home }}/hbase/zoo-dir</value>
    </property>
    <property>
        <name>hbase.client.write.buffer</name>
        <value>{{ hbase.client_write_buffer }}</value>
    </property>
    <property>
        <name>hbase.client.pause</name>
        <value>{{ hbase.client_pause }}</value>
    </property>
    <property>
        <name>hbase.client.retries.number</name>
        <value>{{ hbase.client_retries_number }}</value>
    </property>
    <property>
        <name>hbase.client.scanner.caching</name>
        <value>{{ hbase.client_scanner_caching }}</value>
    </property>
    <property>
        <name>hbase.client.scanner.timeout.period</name>
        <value>{{ hbase.client_scanner_timeout }}</value>
    </property>
    <property>
        <name>hbase.client.keyvalue.maxsize</name>
        <value>{{ hbase.client_keyvalue_maxsize }}</value>
    </property>
    <property>
        <name>hbase.client.primaryCallTimeout.get</name>
        <value>{{ hbase.client_primary_call_timeout_get }}</value>
    </property>
    <property>
        <name>hbase.client.primaryCallTimeout.multiget</name>
        <value>{{ hbase.client_primary_call_timeout_multiget }}</value>
    </property>
    <property>
        <name>hbase.table.sanity.checks</name>
        <value>false</value>
    </property>
    <property>
        <name>hbase.regionserver.thrift.http</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.thrift.support.proxyuser</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.ipc.client.specificThreadForWriting</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.client.primaryCallTimeout.get</name>
        <value>10000</value>
    </property>
    <property>
        <name>hbase.client.primaryCallTimeout.multiget</name>
        <value>10000</value>
    </property>
    <property>
        <name>hbase.snapshot.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>hbase.snapshot.master.timeout.millis</name>
        <value>60000</value>
    </property>
    <property>
        <name>hbase.snapshot.region.timeout</name>
        <value>60000</value>
    </property>
    <property>
        <name>hbase.security.authentication</name>
        <value>simple</value>
    </property>
    <property>
        <name>hbase.rpc.protection</name>
        <value>authentication</value>
    </property>
    <property>
        <name>hbase.regionserver.handler.count</name>
        <value>{{ hbase.region_handler_count }}</value>
    </property>
    <property>
        <name>hbase.master.logcleaner.ttl</name>
        <value>{{ hbase.master_logcleaner_ttl }}</value>
    </property>
    <property>
        <name>hbase.regionserver.regionSplitLimit</name>
        <value>{{ hbase.region_split_limit }}</value>
    </property>
    <property>
        <name>hbase.regionserver.global.memstore.size</name>
        <value>{{ hbase.region_global_memstore_size }}</value>
    </property>
    <property>
        <name>hbase.regionserver.global.memstore.size.lower.limit</name>
        <value>{{ hbase.region_global_memstore_lower_limit }}</value>
    </property>
    <property>
        <name>hbase.hregion.memstore.flush.size</name>
        <value>{{ hbase.hregion_memstore_flush_size }}</value>
    </property>
    <property>
        <name>hbase.hregion.preclose.flush.size</name>
        <value>{{ hbase.hregion_preclose_flush_size }}</value>
    </property>
    <property>
        <name>hbase.hregion.memstore.block.multiplier</name>
        <value>{{ hbase.hregion_memstore_block_multiplier }}</value>
    </property>
    <property>
        <name>hbase.hregion.max.filesize</name>
        <value>{{ hbase.hregion_max_filesize }}</value>
    </property>
    <property>
        <name>hbase.hstore.compactionThreshold</name>
        <value>{{ hbase.hstore_compaction_threshold }}</value>
    </property>
    <property>
        <name>hbase.hstore.blockingStoreFiles</name>
        <value>{{ hbase.hstore_blocking_store_files }}</value>
    </property>
    <property>
        <name>hbase.hstore.blockingWaitTime</name>
        <value>{{ hbase.hstore_blocking_wait_time }}</value>
    </property>
    <property>
        <name>hbase.hregion.majorcompaction</name>
        <value>{{ hbase.hregion_major_compaction }}</value>
    </property>
    <property>
        <name>hfile.block.cache.size</name>
        <value>{{ hbase.hfile_block_size }}</value>
    </property>
    <property>
        <name>hbase.hregion.memstore.mslab.chunksize</name>
        <value>{{ hbase.hregion_memstore_mslab_chunksize }}</value>
    </property>
    <property>
        <name>hbase.hregion.memstore.mslab.max.allocation</name>
        <value>{{ hbase.hregion_memstore_mslab_max_allocation }}</value>
    </property>
    <property>
        <name>hbase.hregion.majorcompaction.jitter</name>
        <value>{{ hbase.hregion_major_compaction_jitter }}</value>
    </property>

<!--    <property>-->
<!--        <name>hbase.tmp.dir</name>-->
<!--        <value>./tmp</value>-->
<!--    </property>-->
<!--    <property>-->
<!--        <name>hbase.unsafe.stream.capability.enforce</name>-->
<!--        <value>false</value>-->
<!--    </property>-->

</configuration>