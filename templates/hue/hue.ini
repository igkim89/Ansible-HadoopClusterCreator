[desktop]

# Hue metadata를 저장할 RDB
[[database]]
# IP Address instead of FQDN
host={{ hostvars[groups['mysql'][0]]['ansible_default_ipv4']['address'] }}
port={{ mysql.jdbc_port }}
engine=mysql
user=hue
password=bigdata123
name=hue

# Set this to a random string, the longer the better.
secret_key=fjfqouhhdaadkjhfqoueh23fjalkasi

# Webserver listens on this address and port
http_host=0.0.0.0
http_port=8888

[hadoop]

[[hdfs_clusters]]

[[[default]]]
fs_defaultfs=hdfs://{{ hostvars[groups['namenode'][0]]['ansible_default_ipv4']['address'] }}:{{ hadoop.hdfs.namenode_rpc_port }}
webhdfs_url=http://{{ hostvars[groups['namenode'][0]]['ansible_default_ipv4']['address'] }}:{{ hadoop.hdfs.httpfs_port }}/webhdfs/v1

[[yarn_clusters]]

[[[default]]]
resourcemanager_host={{ groups['resourcemanager'][0] }}
resourcemanager_api_url=http://{{ groups['resourcemanager'][0] }}:{{ hadoop.yarn.resourcemanager_webapp_port }}/
proxy_api_url=http://{{ groups['resourcemanager'][0] }}:{{ hadoop.yarn.resourcemanager_webapp_port }}/
resourcemanager_port={{ hadoop.yarn.resourcemanager_port }}
history_server_api_url=htpp://{{ groups['jobhistoryserver'][0] }}:{{ hadoop.yarn.jobhistoryserver_http_port }}/

# Zookeeper Quorum을 통한 H/A HiveServer2 접속 정보
[beeswax]
hive_discovery_llap=true
hive_discovery_llap_ha=true
hive_discovery_hs2=true

[libzookeeper]
ensemble={% for zoo in groups['zookeeper'] %}{% if zoo != groups['zookeeper'][0] %},{% endif %}{{ zoo }}:{{ zookeeper.client_port }}{% endfor %}

[hbase]
## 잠시 보류
# hbase_clusters=(Cluster|{{ groups['hbase-master'][0] }}:9090)