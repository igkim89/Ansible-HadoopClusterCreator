<?xml version="1.0" encoding="UTF-8" ?>

<configuration>
    <property>
        <name>dfs.nameservices</name>
        <value>{{ hadoop.hdfs.nameservice }}</value>
    </property>
    <property>
        <name>dfs.ha.namenodes.{{ hadoop.hdfs.nameservice }}</name>
        <value>{% for nn in groups['namenode'] %}{% if nn != groups['namenode'][0] %},{% endif %}{{ nn }}{% endfor %}</value>
    </property>
    <property>
        <name>dfs.namenode.name.dir</name>
<!--        <value>{{ hadoop.hdfs.namenode_dir }}</value>-->
        <value>{% for nd in hadoop.namenode_dir %}{% if nd != hadoop.namenode_dir[0] %},{% endif %}{{ nd }}{% endfor %}</value>
    </property>
    <property>
        <name>dfs.datanode.data.dir</name>
        <value>{% for dd in hadoop.datanode_dir %}{% if dd != hadoop.datanode_dir[0] %},{% endif %}{{ dd }}{% endfor %}</value>
    </property>
    <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>{% for jd in hadoop.journalnode_dir %}{% if jd != hadoop.journalnode_dir[0] %},{% endif %}{{ jd }}{% endfor %}</value>
    </property>
    <property>
        <name>dfs.namenode.rpc-address.{{ hadoop.hdfs.nameservice }}.{{ groups['namenode'][0] }}</name>
        <value>{{ groups['namenode'][0] }}:{{ hadoop.hdfs.namenode_rpc_port }}</value>
    </property>
    <property>
        <name>dfs.namenode.rpc-address.{{ hadoop.hdfs.nameservice }}.{{ groups['namenode'][1] }}</name>
        <value>{{ groups['namenode'][1] }}:{{ hadoop.hdfs.namenode_rpc_port }}</value>
    </property>
    <property>
        <name>dfs.namenode.http-address.{{ hadoop.hdfs.nameservice }}.{{ groups['namenode'][0] }}</name>
        <value>{{ groups['namenode'][0] }}:{{ hadoop.hdfs.namenode_http_port }}</value>
    </property>
    <property>
        <name>dfs.namenode.http-address.{{ hadoop.hdfs.nameservice }}.{{ groups['namenode'][1] }}</name>
        <value>{{ groups['namenode'][1] }}:{{ hadoop.hdfs.namenode_http_port }}</value>
    </property>
    <property>
        <name>dfs.namenode.shared.edits.dir</name>
        <value>qjournal://{% for jn in groups['journalnode'] %}{% if jn != groups['journalnode'][0] %};{% endif %}{{ jn }}:{{ hadoop.hdfs.journalnode_shared_edits_port }}{% endfor %}/{{ hadoop.hdfs.nameservice }}</value>
        <description>qjournal://igkim-01:8485;igkim-02:8485;igkim-03:8485/{{ hadoop.hdfs.nameservice }}</description>
    </property>
    <property>
        <name>dfs.webhdfs.enabled</name>
        <value>{{ hadoop.hdfs.webhdfs_enabled }}</value>
    </property>
    <property>
        <name>dfs.ha.fencing.methods</name>
        <value>sshfence</value>
    </property>
    <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>/home/{{ remote_user }}/.ssh/id_rsa</value>
    </property>
    <property>
        <name>dfs.client.failover.proxy.provider.{{ hadoop.hdfs.nameservice }}</name>
        <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
    </property>
    <property>
        <name>dfs.ha.automatic-failover.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>dfs.replication</name>
        <value>{{ hadoop.hdfs.replication_factor }}</value>
    </property>
    <property>
        <name>dfs.blocksize</name>
        <value>{{ hadoop.hdfs.block_size }}</value>
    </property>
    <property>
        <name>dfs.client.use.datanode.hostname</name>
        <value>false</value>
    </property>
    <property>
        <name>fs.permissions.umask-mode</name>
        <value>{{ hadoop.hdfs.permission_umask }}</value>
    </property>
    <property>
        <name>dfs.namenode.acls.enabled</name>
        <value>true</value>
    </property>
    <property>
        <name>dfs.client.use.legacy.blockreader</name>
        <value>false</value>
    </property>
    <property>
        <name>dfs.client.read.shortcircuit</name>
        <value>false</value>
    </property>
    <property>
        <name>dfs.client.read.shortcircuit.skip.checksum</name>
        <value>false</value>
    </property>
    <property>
        <name>dfs.client.domain.socket.data.traffic</name>
        <value>false</value>
    </property>
    <property>
        <name>dfs.datanode.hdfs-blocks-metadata.enabled</name>
        <value>true</value>
    </property>
</configuration>
