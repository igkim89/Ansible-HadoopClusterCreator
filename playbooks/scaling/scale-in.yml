---
## NodeExporter
- name: Stop NodeExporter
  hosts: scale-in
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    node_exporter_home: "{{ bigdata_home }}/node_exporter"
  tasks:
    - name: Find NodeExporter process ID
      shell: "/usr/bin/ps -ef | grep -v grep | grep node_exporter | awk '{print $2}'"
      register: node_exporter_pid
      failed_when: false
    - name: Kill NodeExporter
      command: "/usr/bin/kill -9 {{ node_exporter_pid.stdout }}"
      when: node_exporter_pid.stdout !=""


## Prometheus configuration 적용 및 재시작
- name: Edit Prometheus configuration
  hosts: prometheus
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    prometheus_home: "{{ bigdata_home }}/prometheus"
  tasks:
    - name: Edit Prometheus configuration
      template:
        src: "prometheus/{{ item }}"
        dest: "{{ bigdata_home }}/prometheus/"
        mode: 0644
      with_items:
        - "prometheus.yml"
    - name: Find Prometheus process ID
      shell: "/usr/bin/ps -ef | grep {{ prometheus_home }}/prometheus | grep -v grep | grep {{ prometheus.web_port }} | awk '{print $2}'"
      register: prometheus_pid
      failed_when: false
    - name: Kill Prometheus
      command: "/usr/bin/kill -9 {{ prometheus_pid.stdout }}"
      when: prometheus_pid.stdout !=""
    - name: Check Prometheus process
      shell: "/usr/bin/ps -ef | grep -v grep | grep {{ prometheus_home }}/prometheus | grep {{ prometheus.web_port }}"
      register: prometheus_ps
      failed_when: false
    - name: Start Prometheus
      shell: "/usr/bin/nohup {{ prometheus_home }}/prometheus --config.file={{ prometheus_home }}/prometheus.yml --web.listen-address=0.0.0.0:{{ prometheus.web_port }} > {{ prometheus_home }}/logs/prometheus.log 2>&1 &"
      when: '"prometheus" not in prometheus_ps.stdout'


## HBase
- name: Stop HBase
  hosts: scale-in
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hbase_home: "{{ bigdata_home }}/hbase"
  tasks:
    - name: Stop HBase region-server
      shell: "{{ hbase_home }}/bin/graceful_stop.sh {{ inventory_hostname }}"

- name: Edit HBase
  hosts: worker
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hbase_home: "{{ bigdata_home }}/hbase"
  tasks:
    - name: Edit hbase configuration
      template:
        src: "hbase/regionservers"
        dest: "{{ bigdata_home }}/hbase/conf/"
        mode: 0644

- name: Rolling restart HBase
  hosts: "{{ groups['hbase-master'][0] }}"
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hbase_home: "{{ bigdata_home }}/hbase"
  tasks:
    - name: Rolling restart HBase master
      shell: "{{ hbase_home }}/bin/rolling-restart.sh --master-only"


## Hadoop
- name: Stop NodeManager
  hosts: scale-in
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/yarn --daemon stop nodemanager"
    - name: Check NodeManager pid
      shell: "/usr/bin/jps | grep 'NodeManager' | awk '{print $1}'"
      register: nm_pid
      failed_when: false
    - name: Kill NodeManager
      command: "/usr/bin/kill -9 {{ nm_pid.stdout }}"
      when: nm_pid.stdout != ""

- name: Stop DataNode
  hosts: scale-in
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Stop DataNode
      command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs --daemon stop datanode"
      failed_when: False
    - name: Check DataNode pid
      shell: "/usr/bin/jps | grep 'DataNode' | awk '{print $1}'"
      register: dn_pid
      failed_when: false
    - name: Kill DataNode
      command: "/usr/bin/kill -9 {{ dn_pid.stdout }}"
      when: dn_pid.stdout != ""