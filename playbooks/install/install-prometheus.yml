---

# Configuration re-load API
# curl -X POST http://127.0.0.1:9090/-/reload

- name: Install Prometheus
  hosts: prometheus
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    prometheus_home: "{{ bigdata_home }}/prometheus"
  tasks:
    - name: Create Create bigdata home directory
      become: yes
      file:
        dest: "{{ bigdata_home }}"
        state: directory
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
    - name: Copy installer
      copy:
        src: "{{ installer_home }}/prometheus/{{ installer.prometheus }}"
        dest: "{{ bigdata_home }}/{{ installer.prometheus }}"
    - name: Unzip installer
      unarchive:
        src: "{{ bigdata_home }}/{{ installer.prometheus }}"
        dest: "{{ bigdata_home }}/"
        remote_src: true
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
        creates: "{{ prometheus_home }}"
    - name: Delete installer
      file:
        path: "{{ bigdata_home }}/{{ installer.prometheus }}"
        state: absent
    - name: Create Prometheus symbolic link
      file:
        src: "{{ bigdata_home }}/{{ installer.prometheus.replace('.tar.gz', '') }}"
        dest: "{{ prometheus_home }}"
        state: link
    - name: Create log directory
      file:
        path: "{{ prometheus_home }}/{{ item }}"
        state: directory
      with_items:
        - "logs"
        - "bin"
        - "conf"
    - name: Add Prometheus configuration
      template:
        src: "prometheus/{{ item }}"
        dest: "{{ prometheus_home }}/conf/"
        mode: 0644
      with_items:
        - "prometheus.yml"
    - name: Copy binary files
      copy:
        src: "{{ prometheus_home }}/{{ item }}"
        dest: "{{ prometheus_home }}/bin/"
      with_items:
        - "prometheus"
        - "promtool"
    - name: Remove binary files
      file:
        path: "{{ prometheus_home }}/{{ item }}"
        state: absent
      with_items:
        - "prometheus"
        - "promtool"
    - name: Copy reload.sh
      template:
        src: "prometheus/reload.sh"
        dest: "{{ prometheus_home }}/"
        mode: 0644
    - name: Check Prometheus process
      shell: "/usr/bin/ps -ef | grep -v grep | grep {{ prometheus_home }}/bin/prometheus | grep {{ prometheus.web_port }}"
      register: prometheus_ps
      failed_when: false
    - name: Start Prometheus
      shell: "/usr/bin/nohup {{ prometheus_home }}/bin/prometheus --config.file={{ prometheus_home }}/conf/prometheus.yml --web.listen-address=0.0.0.0:{{ prometheus.web_port }} --web.enable-lifecycle > {{ prometheus_home }}/logs/prometheus.log 2>&1 &"
      when: '"prometheus" not in prometheus_ps.stdout'
