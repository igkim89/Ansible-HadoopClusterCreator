---

- name: Install Hadoop cluster
  hosts: hadoop
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - name: Create bigdata home directory
    become: yes
    file:
      dest: "{{ bigdata_home }}"
      state: directory
      owner: "{{ remote_user }}"
      group: "{{ remote_user }}"
  - name: Copy installer
    copy:
      src: "{{ installer_home }}/{{ installer.hadoop }}"
      dest: "{{ bigdata_home }}/{{ installer.hadoop }}"
  - name: Unzip installer
    unarchive:
      src: "{{ bigdata_home }}/{{ installer.hadoop }}"
      dest: "{{ bigdata_home }}/"
      remote_src: true
      owner: "{{ remote_user }}"
      group: "{{ remote_user }}"
    #shell: "tar xfz {{ bigdata_home }}/{{ installer.hadoop }} -C {{ bigdata_home }}/"
  - name: Delete installer
    file:
      path: "{{ bigdata_home }}/{{ installer.hadoop }}"
      state: absent
  - name: Create hadoop home symbolic link
    file:
      src: "{{ bigdata_home }}/{{ installer.hadoop.replace('.tar.gz', '') }}"
      dest: "{{ bigdata_home }}/hadoop"
      state: link
  - name: Create configuration symbolic link
    file:
      src: "{{ bigdata_home }}/{{ installer.hadoop.replace('.tar.gz', '') }}/etc/hadoop"
      dest: "{{ bigdata_home }}/{{ installer.hadoop.replace('.tar.gz', '') }}/conf"
      state: link
  - name: 디버깅
    debug:
      msg: "debugging.."
  - name: Edit Java home
    lineinfile:
      path: "{{ bigdata_home }}/hadoop/conf/hadoop-env.sh"
      regexp: "# export JAVA_HOME="
      line: "export JAVA_HOME={{ java_home }}"
  - name: Edit Hadoop home
    lineinfile:
      path: "/home/{{ remote_user }}/.bash_profile"
      line: "{{ item }}"
      insertafter: EOF
    with_items:
    - "export HADOOP_HOME={{ bigdata_home }}/hadoop"
    - "PATH=$PATH:$HADOOP_HOME/bin"
  - name: Refresh bash_profile
    shell: "source /home/{{ remote_user }}/.bash_profile"
    args:
      executable: /bin/bash

- name: Install Namenode
  hosts: namenode
  remote_user: "{{ remote_user }}"
  become: yes
  become_method: sudo
  become_user: root
  tasks:
  - name: Create Namenode directory
    file:
      path: "{{ hadoop.hdfs.namenode_dir }}"
      state: directory
      owner: "{{ remote_user }}"
      group: "{{ remote_user }}"

- name: Install Datanode
  hosts: datanode
  remote_user: "{{ remote_user }}"
  become: yes
  become_method: sudo
  become_user: root
  tasks:
  - name: Create Datanode directory
    file:
      path: "{{ hadoop.hdfs.datanode_dir}}"
      state: directory
      owner: "{{ remote_user }}"
      group: "{{ remote_user }}"

- name: Install Journalnode
  hosts: journalnode
  remote_user: "{{ remote_user }}"
  become: yes
  become_method: sudo
  become_user: root
  tasks:
  - name: Create Journalnode directory
    file:
      path: "{{ hadoop.hdfs.journalnode_dir }}"
      state: directory
      owner: "{{ remote_user }}"
      group: "{{ remote_user }}"

- name: Add configuration files
  hosts: hadoop
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - name: Add hdfs-site.xml
    template:
      src: hadoop/hdfs-site.xml
      dest: "{{ bigdata_home }}/hadoop/conf/hdfs-site.xml"
      mode: u=rw,g=r,o=r
  - name: Add core-site.xml
    template:
      src: hadoop/core-site.xml
      dest: "{{ bigdata_home }}/hadoop/conf/core-site.xml"
      mode: u=rw,g=r,o=r

- name: Start Journalnode
  hosts: journalnode
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - name: Check journalnode jps
    command: "/usr/bin/jps"
    register: journalnode_jps
    changed_when: False
  - name: Start Journalnode
    command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs --daemon start journalnode &"
    when: '"JournalNode" not in journalnode_jps.stdout'
  
- name: Setup Active Namenode
  hosts: "{{ groups['namenode'][0] }}"
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - name: Zookeeper failover controller format
    command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs zkfc -formatZK"
  - name: Namenode format
    command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs namenode -format"

- name: Start Namenode, Journalnode, ZKFC
  hosts: "{{ groups['namenode'][0] }}"
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/sbin/start-dfs.sh"

- name: Setup Standby Namenode
  hosts: "{{ groups['namenode'][1] }}"
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - name: Setup bootstrapStandby
    command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs namenode -bootstrapStandby"
  - name: Start Standby Namenode
    command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs --daemon start namenode"

- name: Start Datanode
  hosts: datanode
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
  - name: Check Datanode serivce
    command: "/usr/bin/jps"
    register: datanode_jps
    changed_when: False
  - name: Start Datanode
    command: "/usr/bin/nohup {{ bigdata_home }}/hadoop/bin/hdfs --daemon start datanode"
    when: '"DataNode" not in datanode_jps.stdout'
