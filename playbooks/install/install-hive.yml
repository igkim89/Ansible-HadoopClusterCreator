#---
#
#- name: Install Hive
#  hosts: hive
#  remote_user: "{{ remote_user }}"
#  become: no
#  vars:
#    hive_home: "{{ bigdata_home }}/hive"
#  tasks:
#    - name: Create bigdata home directory
#      become: yes
#      file:
#        dest: "{{ bigdata_home }}"
#        state: directory
#        owner: "{{ remote_user }}"
#        group: "{{ remote_user }}"
#    - name: Copy installer
#      copy:
#        src: "{{ installer_home }}/{{ installer.hive }}"
#        dest: "{{ bigdata_home }}/{{ installer.hive }}"
#    - name: Unzip installer
#      unarchive:
#        src: "{{ bigdata_home }}/{{ installer.hive }}"
#        dest: "{{ bigdata_home }}/"
#        remote_src: true
#        owner: "{{ remote_user }}"
#        group: "{{ remote_user }}"
#    - name: Delete installer
#      file:
#        path: "{{ bigdata_home }}/{{ installer.hive }}"
#        state: absent
#    - name: Create MariaDB symbolic link
#      file:
#        src: "{{ bigdata_home }}/{{ installer.hive.replace('.tar.gz', '') }}"
#        dest: "{{ hive_home }}"
#        state: link
#
#- name: Create hive metastore database
#  hosts: mariadb
#  remote_user: "{{ remote_user }}"
#  become: no
#  vars:
#    hive_home: "{{ bigdata_home }}/hive"
#  tasks:
#    - name: Create Hive metastore databases
#      command: "{{ mariadb.home_dir }}/bin/mysql --socket={{ mariadb.socket_dir }}/mysql.sock -e 'CREATE DATABASE metastore; USE metastore; SOURCE hive-schema-2.3.0.mysql.sql;'"
#      args:
#        chdir: "{{ hive_home }}/scripts/metastore/upgrade/mysql"
#    - name: Create metastore user
#      shell: |
#        bin/mysql --socket=mysql.sock -e "CREATE USER 'hive'@'{{ item }}' IDENTIFIED BY '{{ hive.metastore.db_pw }}';"
#        bin/mysql --socket=mysql.sock -e "REVOKE ALL PRIVILEGES, GRANT OPTION FROM 'hive'@'{{ item }}';"
#        bin/mysql --socket=mysql.sock -e "GRANT ALL PRIVILEGES ON metastore.* TO 'hive'@'{{ item }}';"
#        bin/mysql --socket=mysql.sock -e "FLUSH PRIVILEGES;"
#      args:
#        chdir: "{{ mariadb.home_dir }}"
#      with_items: "{{ groups['metastore'] }}"
#
- name: Create HDFS directory
  hosts: "{{ groups['namenode'][0] }}"
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hadoop_home: "{{ bigdata_home }}/hadoop"
  tasks:
    - name: Create Hive warehouse directory
      command: "{{ item }}"
      with_items:
        - "{{ hadoop_home }}/bin/hdfs dfs -mkdir /tmp"
        - "{{ hadoop_home }}/bin/hdfs dfs -mkdir -p /user/hive/warehouse"
        - "{{ hadoop_home }}/bin/hdfs dfs -chmod g+w /tmp"
        - "{{ hadoop_home }}/bin/hdfs dfs -chmod g+w /user/hive/warehouse"
      failed_when: false
#
#- name: Add hive metastore configuration
#  hosts: metastore
#  remote_user: "{{ remote_user }}"
#  become: no
#  vars:
#    hive_home: "{{ bigdata_home }}/hive"
#  tasks:
#    - name: Add hive-site.xml
#      template:
#        src: hive/hive-site.xml
#        dest: "{{ hive_home }}/conf/hive-site.xml"
#        mode: 0644
#
#
#
#
#
#
