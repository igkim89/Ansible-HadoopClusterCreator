---

- name: Install Redis
  hosts: redis
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    redis_home: "{{ bigdata_home }}/redis"
  tasks:
    - name: Create Create bigdata home directory
      become: yes
      file:
        dest: "{{ bigdata_home }}"
        state: directory
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
    - name: Create temporary directory
      file:
        dest: "/home/{{ remote_user }}/redis-tmp"
        state: directory
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
    - name: Copy installer
      copy:
        src: "{{ installer_home }}/redis/{{ installer.redis }}"
        dest: "/home/{{ remote_user }}/redis-tmp/"
    - name: Unzip installer
      unarchive:
        src: "/home/{{ remote_user }}/redis-tmp/{{ installer.redis }}"
        dest: "/home/{{ remote_user }}/redis-tmp/"
        remote_src: true
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
    - name: Delete installer
      file:
        path: "/home/{{ remote_user }}/redis-tmp/{{ installer.redis }}"
        state: absent
    - name: Compile redis
      command: "/usr/bin/make"
      args:
        chdir: "/home/{{ remote_user }}/redis-tmp/{{ installer.redis.replace('.tar.gz', '') }}"
    - name: Install redis
      command: "/usr/bin/make install PREFIX={{ bigdata_home }}/{{ installer.redis.replace('.tar.gz', '') }}"
      args:
        chdir: "/home/{{ remote_user }}/redis-tmp/{{ installer.redis.replace('.tar.gz', '') }}"
    - name: Create Redis symbolic link
      file:
        src: "{{ bigdata_home }}/{{ installer.redis.replace('.tar.gz', '') }}"
        dest: "{{ redis_home }}"
        state: link
    - name: Create conf, logs directory
      file:
        dest: "{{ redis_home }}/{{ item }}"
        state: directory
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
      with_items:
        - "conf"
        - "logs"
    - name: Copy configuration files
      copy:
        src: "/home/{{ remote_user }}/redis-tmp/{{ installer.redis.replace('.tar.gz', '') }}/{{ item }}"
        dest: "{{ redis_home }}/conf/"
      with_items:
        - "redis.conf"
        - "sentinel.conf"
    - name: Edit Redis configuration
      lineinfile:
        path: "{{ redis_home }}/conf/redis.conf"
        regexp: "{{ item.key }}"
        line: "{{ item.value }}"
      with_dict:
        - "^bind 127.0.0.1 -::1$": "bind 0.0.0.0"
        - "^protected-mode [a-z]{2,3}$": "protected-mode no"
        - "^port [0-9]{1,5}$": "port {{ redis.port }}"
        - "^daemonize [a-z]{2,3}$": "daemonize yes"
        - "^pidfile*": "pidfile {{ redis_home }}/redis.pid"
        - "^logfile*": "logfile {{ redis_home }}/logs/redis.log"
    - name: Edit Redis Sentinel configuration
      lineinfile:
        path: "{{ redis_home }}/conf/sentinel.conf"
        regexp: "{{ item.key }}"
        line: "{{ item.value }}"
      with_dict:
        - "^protected-mode [a-z]{2,3}$": "protected-mode no"
        - "^port [0-9]{1,5}$": "port {{ redis.sentinel_port }}"
        - "^daemonize [a-z]{2,3}$": "daemonize yes"
        - "^pidfile*": "pidfile {{ redis_home }}/redis-sentinel.pid"
        - "^logfile*": "logfile {{ redis_home }}/logs/redis-sentinel.log"
    - name: Edit Redis Sentinel monitor configuration
      lineinfile:
        path: "{{ redis_home }}/conf/sentinel.conf"
        regexp: "^sentinel monitor"
        line: "sentinel monitor mymaster {{ hostvars[groups['redis'][0]]['ansible_default_ipv4']['address'] }} {{ redis.port }} 2"

- name: Edit Redis Slave configuration
  hosts: "{{ groups['redis'][1] }}, {{ groups['redis'][2] }}"
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    redis_home: "{{ bigdata_home }}/redis"
  tasks:
    - name: Edit Redis Slave configuration
      lineinfile:
        path: "{{ redis_home }}/conf/redis.conf"
        regexp: "^replicaof*[0-9]$"
        line: "replicaof {{ groups['redis'][0] }} {{ redis.port }}"
        insertafter: "^# replicaof <masterip> <masterport>"

- name: Start Redis server
  hosts: redis
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    redis_home: "{{ bigdata_home }}/redis"
  tasks:
    - name: Start Redis Server
      command: "{{ redis_home }}/bin/redis-server {{ redis_home }}/conf/redis.conf"
    - name: Start Redis Sentinel server
      command: "{{ redis_home }}/bin/redis-sentinel {{ redis_home }}/conf/sentinel.conf"

