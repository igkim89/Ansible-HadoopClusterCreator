---

## Start Webserver
- name: Start Airflow webserver
  hosts: airflow-webserver:&{{ variable_host }}
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Check Airflow webserver
      shell: "/usr/bin/ps -ef | grep 'master \\[airflow-webserver\\]'"
      register: webserver_result
      failed_when: false
    - name: Remove pid file
      file:
        path: "{{ airflow_home }}/{{ item }}"
        state: absent
      with_items:
        - "airflow-webserver.pid"
        - "airflow-webserver-monitor.pid"
      when: '"master [airflow-webserver]" not in webserver_result.stdout'
    - name: Start Airflow webserver
      command: "~/.pyenv/shims/airflow webserver -D"
      when: '"master [airflow-webserver]" not in webserver_result.stdout'


## Start Scheduler
- name: Start Airflow scheduler
  hosts: airflow-scheduler:&{{ variable_host }}
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Check Airflow scheduler
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'bin/airflow scheduler'"
      register: scheduler_result
      failed_when: false
    - name: Remove pid file
      file:
        path: "{{ airflow_home }}/airflow-scheduler.pid"
        state: absent
      when: '"airflow scheduler" not in scheduler_result.stdout'
    - name: Start Airflow scheduler
      command: "~/.pyenv/shims/airflow scheduler -D"
      when: '"airflow scheduler" not in scheduler_result.stdout'


## Start Celery Flower
- name: Start Celery flower
  hosts: airflow-celery-flower:&{{ variable_host }}
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Check Celery flower
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'airflow celery flower'"
      register: flower_result
      failed_when: false
    - name: Remove pid file
      file:
        path: "{{ airflow_home }}/airflow-flower.pid"
        state: absent
      when: '"airflow celery flower" not in flower_result.stdout'
    - name: Start Celery flower
      command: "~/.pyenv/shims/airflow celery flower -D"
      when: '"airflow celery flower" not in flower_result.stdout'


## Start Celery Worker
- name: Start Celery worker
  hosts: airflow-celery-worker:&{{ variable_host }}
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Check Celery worker
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'celery worker' | grep 'MainProcess'"
      register: worker_result
      failed_when: false
    - name: Remove pid file
      file:
        path: "{{ airflow_home }}/airflow-worker.pid"
        state: absent
      when: '"celery worker" not in worker_result.stdout'
    - name: Start Celery worker
      command: "~/.pyenv/shims/airflow celery worker -D"
      when: '"celery worker" not in worker_result.stdout'