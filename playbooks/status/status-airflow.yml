---

- name: Check Airflow webserver status
  hosts: airflow-webserver
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Set default status
      set_fact:
        cacheable: yes
        webserver_status: "Airflow webserver is stopped."
      no_log: true
    - name: Check Airflow webserver
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'master \\[airflow-webserver\\]'"
      register: webserver_ps
      no_log: true
      failed_when: false
    - name: Set status
      set_fact:
        cacheable: yes
        webserver_status: "Airflow webserver is running."
      when: '"master [airflow-webserver]" in webserver_ps.stdout'
      no_log: true


- name: Airflow scheduler status
  hosts: airflow-scheduler
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Set default status
      set_fact:
        cacheable: yes
        scheduler_status: "Airflow scheduler is stopped."
      no_log: true
    - name: Check Airflow scheduler
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'bin/airflow scheduler'"
      register: scheduler_ps
      no_log: true
      failed_when: false
    - name: Set status
      set_fact:
        cacheable: yes
        scheduler_status: "Airflow scheduler is running."
      when: '"airflow scheduler" in scheduler_ps.stdout'
      no_log: true

- name: Airflow Celery-Flower status
  hosts: airflow-celery-flower
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Set default status
      set_fact:
        cacheable: yes
        flower_status: "Airflow Celery-Flower is stopped."
      no_log: true
    - name: Check Celery flower
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'airflow celery flower'"
      register: flower_ps
      no_log: true
      failed_when: false
    - name: Set status
      set_fact:
        cacheable: yes
        flower_status: "Airflow Celery-Flower is running."
      when: '"airflow celery flower" in flower_ps.stdout'
      no_log: true

- name: Airflow Celery-Worker status
  hosts: airflow-celery-worker
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Set default status
      set_fact:
        cacheable: yes
        worker_status: "Airflow Celery-Worker is stopped."
      no_log: true
    - name: Check Celery worker
      shell: "/usr/bin/ps -ef | grep -v grep | grep 'celery worker' | grep 'MainProcess'"
      register: worker_ps
      no_log: true
      failed_when: false
    - name: Set status
      set_fact:
        cacheable: yes
        worker_status: "Airflow Celery-Worker is running."
      when: '"MainProcess" in worker_ps.stdout'
      no_log: true


- name: Show Airflow status
  hosts: airflow-webserver
  tasks:
    - name: Airflow status
      debug:
        msg:
          - "{{ webserver_status }}"

- name: Show Airflow status
  hosts: airflow-scheduler
  tasks:
    - name: Airflow status
      debug:
        msg:
          - "{{ scheduler_status }}"

- name: Show Airflow status
  hosts: airflow-celery-flower
  tasks:
    - name: Airflow status
      debug:
        msg:
          - "{{ flower_status }}"

- name: Show Airflow status
  hosts: airflow-celery-worker
  tasks:
    - name: Airflow status
      debug:
        msg:
          - "{{ worker_status }}"