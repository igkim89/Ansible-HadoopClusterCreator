---

- name: Test Hive query
  hosts: "{{ groups['hive-server2'][0] }}"
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hadoop_home: "{{ bigdata_home }}/hadoop"
    hive_home: "{{ bigdata_home }}/hive"
    zoo_quorum: "{% for zoo in groups['zookeeper'] %}{% if zoo != groups['zookeeper'][0] %},{% endif %}{{ zoo }}:{{ zookeeper.client_port }}{% endfor %}"
  tasks:
    - name: Copy CSV file
      template:
        src: external_test.csv
        dest: "{{ hive_home }}/external_test.csv"
    - name: Create HDFS directory
      command: "{{ hadoop_home }}/bin/hdfs dfs -mkdir -p /user/{{ remote_user }}/hive/external_test"
      failed_when: false
    - name: Upload CSV file
      command: "{{ hadoop_home }}/bin/hdfs dfs -put {{ hive_home }}/external_test.csv /user/{{ remote_user }}/hive/external_test/"
      failed_when: false
    - name: Delete temporary CSV
      file:
        path: "{{ hive_home }}/external_test.csv"
        state: absent
    - name: Check Database
      command: "{{ hive_home }}/bin/beeline -u \"jdbc:hive2://{{ zoo_quorum }}/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2\" -n {{ remote_user }} -e 'show databases;'"
      register: database_list
    - name: Create Database
      command: "{{ hive_home }}/bin/beeline -u \"jdbc:hive2://{{ zoo_quorum }}/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2\" -n {{ remote_user }} -e 'create database ansible_test;'"
      when: '"ansible_test" not in database_list.stdout'
    - name: Check Table
      command: "{{ hive_home }}/bin/beeline -u \"jdbc:hive2://{{ zoo_quorum }}/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2\" -n {{ remote_user }} -e 'show tables from ansible_test;'"
      register: table_list
    - name: Create Table
      command: "{{ hive_home }}/bin/beeline -u \"jdbc:hive2://{{ zoo_quorum }}/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2\" -n {{ remote_user }} -e \"create external table ansible_test.external_test (id int, name string) row format delimited fields terminated by ',' location 'hdfs://{{ hadoop.hdfs.nameservice }}/user/{{ remote_user }}/hive/external_test';\""
      when: '"external_test" not in table_list.stdout'
    - name: Select Table
      command: "{{ hive_home }}/bin/beeline -u \"jdbc:hive2://{{ zoo_quorum }}/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2\" -n {{ remote_user }} -e \"select id, name from ansible_test.external_test order by 1;\""
      register: query_result
    - name: Hive query result
      debug:
        var: query_result