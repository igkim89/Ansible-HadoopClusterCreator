---

### Stop Celery
#- name: Stop Celery flower
#  hosts: airflow-webserver
#  remote_user: "{{ remote_user }}"
#  become: no
#  tasks:
#    - name: Stop Celery flower
#      command: "~/.pyenv/shims/airflow celery flower -D"

## Stop Webserver
- name: Stop Airflow webserver
  hosts: airflow-webserver
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Stop Airflow webserver
      shell: "/usr/bin/kill -9 `cat {{ airflow_home }}/airflow-webserver.pid`"
      failed_when: false
    - name: Remove pid file
      shell: "/usr/bin/rm {{ airflow_home }}/airflow-webserver.pid"
      failed_when: false
    - name: Kill airflow worker process
      shell: "/usr/bin/kill -9 $(/usr/bin/ps -ef | grep 'airflow-webserver' | grep -v grep | awk '{print $2}')"
      failed_when: false


## Stop Scheduler
- name: Stop Airflow scheduler
  hosts: airflow-scheduler
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Stop Airflow scheduler
      shell: "/usr/bin/kill -9 `cat {{ airflow_home }}/airflow-scheduler.pid`"
      failed_when: false
    - name: Remove pid file
      shell: "/usr/bin/rm {{ airflow_home }}/airflow-scheduler.pid"
      failed_when: false
    - name: Kill airflow scheduler process
      shell: "/usr/bin/kill -9 $(/usr/bin/ps -ef | grep 'airflow scheduler' | grep -v grep | awk '{print $2}')"
      failed_when: false
    - name: Kill airflow worker process
      shell: "/usr/bin/kill -9 $(/usr/bin/ps -ef | grep 'airflow worker' | grep -v grep | awk '{print $2}')"
      failed_when: false
    - name: Kill airflow executor process
      shell: "/usr/bin/kill -9 $(/usr/bin/ps -ef | grep 'airflow executor' | grep -v grep | awk '{print $2}')"
      failed_when: false


- name: Remove Setting a MySQL Database
  hosts: mysql
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Drop DB, User
      shell: |
        bin/mysql -uroot -p{{ mysql.root_pw }} --socket={{ mysql.socket_dir }}/mysql.sock -e "DROP DATABASE {{ airflow.db_name }};"
        bin/mysql -uroot -p{{ mysql.root_pw }} --socket={{ mysql.socket_dir }}/mysql.sock -e "DROP USER '{{ airflow.db_user }}'@'localhost';"
      args:
        chdir: "{{ mysql.home_dir }}"
      failed_when: false

- name: Remove Setting a MySQL Database
  hosts: mysql
  remote_user: "{{ remote_user }}"
  become: no
  tasks:
    - name: Drop User
      shell: |
        bin/mysql -uroot -p{{ mysql.root_pw }} --socket={{ mysql.socket_dir }}/mysql.sock -e "DROP USER '{{ airflow.db_user }}'@'{{ item }}';"
      args:
        chdir: "{{ mysql.home_dir }}"
      with_items: "{{ groups['airflow'] }}"
      failed_when: false

- name: Uninstall Airflow
  hosts: airflow-webserver, airflow-scheduler, airflow-celery-worker
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Uninstall Airflow-celery
      command: "pip uninstall apache-airflow[celery] -y"
    - name: Uninstall Airflow-mysql
      command: "pip uninstall apache-airflow[mysql] -y"

- name: Remove Airflow directory
  hosts: airflow-webserver, airflow-scheduler, airflow-celery-worker
  become: no
  vars:
    airflow_home: "{{ bigdata_home }}/airflow"
  tasks:
    - name: Remove directory
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ airflow_home }}"
        - "/home/{{ remote_user }}/airflow-tmp"
      failed_when: False