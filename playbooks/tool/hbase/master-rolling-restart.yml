---

- name: HBase Master Rolling restart
  hosts: "{{ groups['hbase-master'][0] }}"
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hbase_home: "{{ bigdata_home }}/hbase"
  tasks:
    - name: Check HBase Master pid
      shell: "/usr/bin/jps | grep 'HMaster' | awk '{print $1}'"
      register: hm_pid
      failed_when: false
    - name: Kill HBase Master
      shell: "/usr/bin/kill -9 {{ hm_pid.stdout }}"
      when: hm_pid.stdout != ""
    - name: Check HBase Master
      shell: "/usr/bin/jps | grep 'HMaster'"
      register: hm_result
      failed_when: false
    - name: Stop Master
      shell: "{{ hbase_home }}/bin/hbase-daemon.sh stop master"
      when: '"HMaster" in hm_result.stdout'
    - name: Check Active-Master
      shell: "{{ hbase_home }}/bin/get-active-master.rb"
      register: active_result
      until: "groups['hbase-master'][1] in active_result.stdout"
      retries: 10
      delay: 10
    - name: Check HBase Master
      shell: "/usr/bin/jps | grep 'HMaster'"
      register: hm_result
      failed_when: false
    - name: Start HBase Master
      shell: "/usr/bin/nohup {{ hbase_home }}/bin/hbase-daemon.sh start master"
      when: '"HMaster" not in hm_result.stdout'

- name: HBase Master-backup Rolling restart
  hosts: "{{ groups['hbase-master'][1] }}"
  remote_user: "{{ remote_user }}"
  become: no
  vars:
    hbase_home: "{{ bigdata_home }}/hbase"
  tasks:
    - name: Check Backup-Master
      shell: "/usr/bin/curl -i http://{{ groups['hbase-master'][0] }}:{{ hbase.master_info_port }}"
      register: backup_result
      until: '"HTTP/1.1 200 OK" in backup_result.stdout'
      retries: 10
      delay: 10
    - name: Check HBase Master pid
      shell: "/usr/bin/jps | grep 'HMaster' | awk '{print $1}'"
      register: hm_pid
      failed_when: false
    - name: Kill HBase Master
      shell: "/usr/bin/kill -9 {{ hm_pid.stdout }}"
      when: hm_pid.stdout != ""
    - name: Check HBase Master
      shell: "/usr/bin/jps | grep 'HMaster'"
      register: hm_result
      failed_when: false
    - name: Stop Master
      shell: "{{ hbase_home }}/bin/hbase-daemon.sh stop master"
      when: '"HMaster" in hm_result.stdout'
    - name: Check Active-Master
      shell: "{{ hbase_home }}/bin/get-active-master.rb"
      register: active_result
      until: "groups['hbase-master'][0] in active_result.stdout"
      retries: 10
      delay: 10
    - name: Check HBase Master
      shell: "/usr/bin/jps | grep 'HMaster'"
      register: hm_result
      failed_when: false
    - name: Start HBase Master
      shell: "/usr/bin/nohup {{ hbase_home }}/bin/hbase-daemon.sh start master"
      when: '"HMaster" not in hm_result.stdout'
    - name: Check Backup-Master
      shell: "/usr/bin/curl -i http://{{ groups['hbase-master'][1] }}:{{ hbase.master_info_port }}"
      register: backup_result
      until: '"HTTP/1.1 200 OK" in backup_result.stdout'
      retries: 10
      delay: 10